{
  "src/log/Formatter.hh": {
    "rm": [], 
    "add": [], 
    "full": [], 
    "errors": false
  }, 
  "src/log/ColoredFormatter.hh": {
    "rm": [], 
    "add": [], 
    "full": [], 
    "errors": false
  }, 
  "src/tty.hh": {
    "rm": [], 
    "add": [], 
    "full": [], 
    "errors": false
  }, 
  "src/log/MemoryAppender.hh": {
    "rm": [], 
    "add": [], 
    "full": [], 
    "errors": false
  }, 
  "src/types.cc": {
    "rm": [], 
    "add": [], 
    "full": [], 
    "errors": false
  }, 
  "src/tty.cc": {
    "rm": [], 
    "add": [], 
    "full": [], 
    "errors": false
  }, 
  "src/log/helpers.cc": {
    "rm": [], 
    "add": [], 
    "full": [], 
    "errors": false
  }, 
  "src/log/SyslogAppender.hh": {
    "rm": [], 
    "add": [], 
    "full": [], 
    "errors": false
  }, 
  "src/log/Stream.hh": {
    "rm": [], 
    "add": [], 
    "full": [], 
    "errors": false
  }, 
  "src/log/StreamAppender.hh": {
    "rm": [], 
    "add": [], 
    "full": [], 
    "errors": false
  }, 
  "src/log/FormatModifiers.hh": {
    "rm": [], 
    "add": [], 
    "full": [], 
    "errors": false
  }, 
  "src/log/Logger.hh": {
    "rm": [], 
    "add": [], 
    "full": [], 
    "errors": false
  }, 
  "src/text.hh": {
    "rm": [], 
    "add": [], 
    "full": [], 
    "errors": false
  }, 
  "src/log/Logger.cc": {
    "rm": [], 
    "add": [], 
    "full": [], 
    "errors": false
  }, 
  "src/log/MemoryAppender.cc": {
    "rm": [], 
    "add": [], 
    "full": [], 
    "errors": false
  }, 
  "src/log/Formatter.hxx": {
    "rm": [], 
    "add": [], 
    "full": [], 
    "errors": false
  }, 
  "src/log/Appender.cc": {
    "rm": [], 
    "add": [], 
    "full": [], 
    "errors": false
  }, 
  "/home/travis/build/psycofdj/xtdcpp/core/src/config/Grammar.cc": {
    "rm": [], 
    "add": [], 
    "full": [], 
    "errors": "/home/travis/build/psycofdj/xtdcpp/core/src/config/Grammar.cc:11:10: error: class template 'Grammar' was previously declared as a struct template [-Werror,-Wmismatched-tags]\ntemplate class Grammar<std::string::iterator>;\n         ^\n/home/travis/build/psycofdj/xtdcpp/core/src/config/Grammar.hh:57:8: note: previous use is here\nstruct Grammar : boost::spirit::qi::grammar<boost::spirit::line_pos_iterator<Iterator>, std::vector<section>(), types::skipper>\n       ^\n/home/travis/build/psycofdj/xtdcpp/core/src/config/Grammar.cc:11:10: note: did you mean struct here?\ntemplate class Grammar<std::string::iterator>;\n         ^~~~~\n         struct\n/home/travis/build/psycofdj/xtdcpp/core/src/config/Grammar.cc:12:10: error: class template 'Grammar' was previously declared as a struct template [-Werror,-Wmismatched-tags]\ntemplate class Grammar<std::string::const_iterator>;\n         ^\n/home/travis/build/psycofdj/xtdcpp/core/src/config/Grammar.hh:57:8: note: previous use is here\nstruct Grammar : boost::spirit::qi::grammar<boost::spirit::line_pos_iterator<Iterator>, std::vector<section>(), types::skipper>\n       ^\n/home/travis/build/psycofdj/xtdcpp/core/src/config/Grammar.cc:12:10: note: did you mean struct here?\ntemplate class Grammar<std::string::const_iterator>;\n         ^~~~~\n         struct\n/home/travis/build/psycofdj/xtdcpp/core/src/config/Grammar.cc:13:10: error: class template 'Grammar' was previously declared as a struct template [-Werror,-Wmismatched-tags]\ntemplate class Grammar<std::istream_iterator<char>>;\n         ^\n/home/travis/build/psycofdj/xtdcpp/core/src/config/Grammar.hh:57:8: note: previous use is here\nstruct Grammar : boost::spirit::qi::grammar<boost::spirit::line_pos_iterator<Iterator>, std::vector<section>(), types::skipper>\n       ^\n/home/travis/build/psycofdj/xtdcpp/core/src/config/Grammar.cc:13:10: note: did you mean struct here?\ntemplate class Grammar<std::istream_iterator<char>>;\n         ^~~~~\n         struct\nCycle in include-mapping:\n  <boost/phoenix/support/detail/iterate.hpp> ->\n  <boost/phoenix/scope/detail/local_gen.hpp> ->\n  <boost/phoenix/scope/detail/local_gen.hpp>\n/include-what-you-use-clang_4.0/iwyu_include_picker.cc:845: Assertion failed: Cycle in include-mapping\n"
  }, 
  "src/log/StreamAppender.cc": {
    "rm": [], 
    "add": [], 
    "full": [], 
    "errors": false
  }, 
  "src/log/Logger.hxx": {
    "rm": [], 
    "add": [], 
    "full": [], 
    "errors": false
  }, 
  "src/log/Formatter.cc": {
    "rm": [], 
    "add": [], 
    "full": [], 
    "errors": false
  }, 
  "src/types.hh": {
    "rm": [], 
    "add": [
      "#include <bits/c++config.h>   // for size_t", 
      "#include <bits/shared_ptr.h>  // for shared_ptr", 
      "#include <bits/stl_map.h>     // for map", 
      "#include <bits/stl_pair.h>    // for pair", 
      "#include <bits/stl_vector.h>  // for vector", 
      "#include <bits/stringfwd.h>   // for string"
    ], 
    "full": [
      "#include <bits/c++config.h>   // for size_t", 
      "#include <bits/shared_ptr.h>  // for shared_ptr", 
      "#include <bits/stl_map.h>     // for map", 
      "#include <bits/stl_pair.h>    // for pair", 
      "#include <bits/stl_vector.h>  // for vector", 
      "#include <bits/stringfwd.h>   // for string", 
      "#include <stdint.h>           // for uint16_t, uint32_t, uint64_t, uint8_t", 
      "#include <sys/types.h>        // for int16_t, int32_t, int64_t, int8_t", 
      "#include <cstddef>", 
      "#include <cstdint>", 
      "#include <fstream>", 
      "#include <functional>         // for function", 
      "#include <iosfwd>             // for ostream, ifstream, istream, ofstream, stringstream", 
      "#include <map>", 
      "#include <memory>", 
      "#include <ostream>            // for endl", 
      "#include <string>", 
      "#include <type_traits>        // for underlying_type, enable_if, is_enum, is_integral", 
      "#include <utility>", 
      "#include <vector>"
    ], 
    "errors": false
  }, 
  "src/log/ConfLoader.cc": {
    "rm": [], 
    "add": [], 
    "full": [], 
    "errors": false
  }, 
  "src/log/helpers.hh": {
    "rm": [], 
    "add": [], 
    "full": [], 
    "errors": false
  }, 
  "src/log/helpers.hxx": {
    "rm": [], 
    "add": [], 
    "full": [], 
    "errors": false
  }, 
  "src/log/SyslogAppender.cc": {
    "rm": [], 
    "add": [], 
    "full": [], 
    "errors": false
  }, 
  "/home/travis/build/psycofdj/xtdcpp/core/src/config/Parser.cc": {
    "rm": [], 
    "add": [], 
    "full": [], 
    "errors": "Cycle in include-mapping:\n  <boost/phoenix/support/detail/iterate.hpp> ->\n  <boost/phoenix/scope/detail/local_gen.hpp> ->\n  <boost/phoenix/scope/detail/local_gen.hpp>\n/include-what-you-use-clang_4.0/iwyu_include_picker.cc:845: Assertion failed: Cycle in include-mapping\n"
  }, 
  "src/log/Stream.cc": {
    "rm": [], 
    "add": [], 
    "full": [], 
    "errors": false
  }, 
  "src/log/ConfLoader.hh": {
    "rm": [], 
    "add": [], 
    "full": [], 
    "errors": false
  }, 
  "src/text.cc": {
    "rm": [], 
    "add": [], 
    "full": [], 
    "errors": false
  }, 
  "src/log/FormatModifiers.cc": {
    "rm": [], 
    "add": [], 
    "full": [], 
    "errors": false
  }, 
  "/home/travis/build/psycofdj/xtdcpp/core/src/Application.cc": {
    "rm": [], 
    "add": [], 
    "full": [], 
    "errors": "include-what-you-use: /usr/lib/llvm-4.0/include/llvm/Support/Casting.h:236: typename llvm::cast_retty<X, Y*>::ret_type llvm::cast(Y*) [with X = clang::CXXConstructorDecl; Y = clang::NamedDecl; typename llvm::cast_retty<X, Y*>::ret_type = clang::CXXConstructorDecl*]: Assertion `isa<X>(Val) && \"cast<Ty>() argument of incompatible type!\"' failed.\n"
  }, 
  "src/log/Appender.hh": {
    "rm": [], 
    "add": [], 
    "full": [], 
    "errors": false
  }, 
  "src/log/ColoredFormatter.cc": {
    "rm": [], 
    "add": [], 
    "full": [], 
    "errors": false
  }
}