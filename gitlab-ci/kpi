#!/bin/bash
set -e

# copying debug reports in release reports
for c_dir in $(find ${CI_WORK_DIR}/${CI_LSB_RELEASE}/debug/build/reports  -mindepth 1 -maxdepth 1 -type d); do
  l_name=$(basename ${c_dir})
  for c_report in $(find ${CI_WORK_DIR}/${CI_LSB_RELEASE}/debug/build/reports/${l_name}  -mindepth 1 -maxdepth 1 -type d); do
    l_report=$(basename ${c_report})
    rm -rf ${CI_WORK_DIR}/${CI_LSB_RELEASE}/release/build/reports/${l_name}/${l_report}
    cp -r ${CI_WORK_DIR}/${CI_LSB_RELEASE}/debug/build/reports/${l_name}/${l_report} ${CI_WORK_DIR}/${CI_LSB_RELEASE}/release/build/reports/${l_name}/${l_report}
  done
done

# updating release report interface
make -C ${CI_WORK_DIR}/${CI_LSB_RELEASE}/release/build reports-update

# copying reports into branch
rm -rf ${CI_WORK_DIR}/reports
cp -r ${CI_WORK_DIR}/${CI_LSB_RELEASE}/release/build/reports ${CI_WORK_DIR}/reports

echo "Uncrypting ci-bot ssh key..."
openssl aes-256-cbc -d -a -in ${CI_PROJECT_DIR}/gitlab-ci/ci-bot.rsa.enc -out ${CI_PROJECT_DIR}/gitlab-ci/ci-bot.rsa -k ${CI_BOT_PASSWORD}
chmod 600 ${CI_PROJECT_DIR}/gitlab-ci/ci-bot.rsa
eval `ssh-agent -s`
ssh-add ${CI_PROJECT_DIR}/gitlab-ci/ci-bot.rsa

echo "Cloning ci-reports branch..."
mkdir -p ~/.ssh/
echo "StrictHostKeyChecking no" > ~/.ssh/config
echo "UserKnownHostsFile /dev/null"  >> ~/.ssh/config
l_sha=`git rev-parse --verify HEAD`
l_repo=`git config remote.origin.url`
l_repo=$(echo -n ${l_repo} | sed -r 's%http://(.*@)?([^:]+)(:[0-9]+)/%git@\2:%g')
rm -rf ci-reports
git clone -q -b ci-reports ${l_repo} ci-reports

echo "Copying files..."
mkdir -p ci-reports/${CI_BUILD_REF_NAME}/
rm -rf ci-reports/${CI_BUILD_REF_NAME}/*
cp -r ${CI_WORK_DIR}/reports/* ci-reports/${CI_BUILD_REF_NAME}/
find ci-reports/${CI_BUILD_REF_NAME}/ -name latex -type d | xargs rm -rf
find ci-reports/${CI_BUILD_REF_NAME}/ -name xml   -type d | xargs rm -rf

echo "Commiting..."
cd ci-reports
git config user.name "CI-Bot for ${GITLAB_USER_EMAIL}"
git config user.email "${GITLAB_USER_EMAIL}"
git add ${CI_BUILD_REF_NAME}/*
git commit -m "Deploy to ci-reports for ${l_sha}" || true

echo "Pushing ci-reports branch..."
git branch ci-reports-clean $(echo "Deploy to ci-reports for ${l_sha}" | git commit-tree HEAD^{tree})
git checkout ci-reports-clean
git push -f -q $l_repo ci-reports-clean:ci-reports

rm -rf ${CI_PROJECT_DIR}/gitlab-ci/ci-bot.rsa
